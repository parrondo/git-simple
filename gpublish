#!/usr/bin/env bash
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

shopt -s extglob #if not active for patterns (..|..|..)

#
# Usage: git-puplish (from project root)
#
# Publish sphinx docs from <project>/docs master branch on github <project> gh-pages branch.
# It is asummed the documentation is build on "source_doc_dir".
#
#
# This bash script make use of git-friendly scripts.
# A collection of shell scripts for making pulling, branching, and merging with Git fast 
# Forked from:https://github.com/jamiew/git-friendly
# git-friendly has 4 scripts: pull, branch, merge and push.
#
# Repository structure asummed
# project/
#        docs/

# Variables
source_doc_dir="docs/_build/html" #You may look at your sphinx Makefile

# Get a clean master branch from "proj/"
branch master
echo "get a clean master branch assuming it is actual"
pull

# Build the docs
# you are in <project> master
cd docs

# <project>/docs master
make clean
make html
cd ..

# Commit and push previous changes before publish
# <project> master
push

# Switch branches and pull the data we want
# <project> master
branch gh-pages

# Delete all except .git, .gitignore, docs
# <project> gh-pages
to_delete=!(.git|.gitignore|docs)
rm -rf $to_delete

# The .nojekyll grain in the back
# <project> gh-pages
touch .nojekyll

# Move docs files to project root
# <project> gh-pages
mv $source_doc_dir/* .

# Commit new pages
# <project> gh-pages
echo "Staging and committing changes..."
git add .
git commit -a -m "new pages version $(date)"

# Push to github
# <project> gh-pages
push
echo "Documentation published!"

# Switch back to master branch
# <project> gh-pages
branch master

